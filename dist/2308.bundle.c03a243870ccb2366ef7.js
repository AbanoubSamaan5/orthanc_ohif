"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2308,8402],{79044:(e,t,n)=>{n.d(t,{A:()=>N,B:()=>h});var r=n(86326),a=n(97598),s=n.n(a),i=n(70574),o=n(95261),c=n(11078),d=n(99847);const u={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4,HYDRATE_REPORT:5},l={id:"measurementTracking",initial:"idle",context:{activeViewportId:null,trackedStudy:"",trackedSeries:[],ignoredSeries:[],prevTrackedStudy:"",prevTrackedSeries:[],prevIgnoredSeries:[],ignoredSRSeriesForHydration:[],isDirty:!1},states:{off:{type:"final"},labellingOnly:{on:{TRACK_SERIES:[{target:"promptLabelAnnotation",actions:["setPreviousState"]},{target:"off"}]}},idle:{entry:"clearContext",on:{TRACK_SERIES:[{target:"promptLabelAnnotation",cond:"isLabelOnMeasure",actions:["setPreviousState"]},{target:"promptBeginTracking",actions:["setPreviousState"]}],SET_TRACKED_SERIES:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","setIsDirtyToClean"]}],PROMPT_HYDRATE_SR:{target:"promptHydrateStructuredReport",cond:"hasNotIgnoredSRSeriesForHydration"},RESTORE_PROMPT_HYDRATE_SR:"promptHydrateStructuredReport",HYDRATE_SR:"hydrateStructuredReport",UPDATE_ACTIVE_VIEWPORT_ID:{actions:(0,i.kp)({activeViewportId:(e,t)=>t.activeViewportId})}}},promptBeginTracking:{invoke:{src:"promptBeginTracking",onDone:[{target:"tracking",actions:["setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"labellingOnly",cond:"isLabelOnMeasureAndShouldKillMachine"},{target:"off",cond:"shouldKillMachine"},{target:"idle"}],onError:{target:"idle"}}},tracking:{on:{TRACK_SERIES:[{target:"promptLabelAnnotation",cond:"isLabelOnMeasure",actions:["setPreviousState"]},{target:"promptTrackNewStudy",cond:"isNewStudy"},{target:"promptTrackNewSeries",cond:"isNewSeries"}],UNTRACK_SERIES:[{target:"tracking",actions:["removeTrackedSeries","setIsDirty"],cond:"hasRemainingTrackedSeries"},{target:"idle"}],SET_TRACKED_SERIES:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries"]}],SAVE_REPORT:"promptSaveReport",SET_DIRTY:[{target:"tracking",actions:["setIsDirty"],cond:"shouldSetDirty"},{target:"tracking"}]}},promptTrackNewSeries:{invoke:{src:"promptTrackNewSeries",onDone:[{target:"tracking",actions:["addTrackedSeries","setIsDirty"],cond:"shouldAddSeries"},{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"promptSaveReport",cond:"shouldPromptSaveReport"},{target:"tracking"}],onError:{target:"idle"}}},promptTrackNewStudy:{invoke:{src:"promptTrackNewStudy",onDone:[{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries","setIsDirty"],cond:"shouldSetStudyAndSeries"},{target:"tracking",actions:["ignoreSeries"],cond:"shouldAddIgnoredSeries"},{target:"promptSaveReport",cond:"shouldPromptSaveReport"},{target:"tracking"}],onError:{target:"idle"}}},promptSaveReport:{invoke:{src:"promptSaveReport",onDone:[{target:"idle",actions:["clearAllMeasurements","showStructuredReportDisplaySetInActiveViewport"],cond:"shouldSaveAndContinueWithSameReport"},{target:"tracking",actions:["discardPreviouslyTrackedMeasurements","setTrackedStudyAndSeries"],cond:"shouldSaveAndStartNewReport"},{target:"tracking"}],onError:{target:"idle"}}},promptHydrateStructuredReport:{invoke:{src:"promptHydrateStructuredReport",onDone:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","jumpToSameImageInActiveViewport","setIsDirtyToClean"],cond:"shouldHydrateStructuredReport"},{target:"idle",actions:["ignoreHydrationForSRSeries"],cond:"shouldIgnoreHydrationForSR"}],onError:{target:"idle"}}},hydrateStructuredReport:{invoke:{src:"hydrateStructuredReport",onDone:[{target:"tracking",actions:["setTrackedStudyAndMultipleSeries","jumpToSameImageInActiveViewport","setIsDirtyToClean"]}],onError:{target:"idle"}}},promptLabelAnnotation:{invoke:{src:"promptLabelAnnotation",onDone:[{target:"labellingOnly",cond:"wasLabellingOnly"},{target:"promptBeginTracking",cond:"wasIdle"},{target:"promptTrackNewStudy",cond:"wasTrackingAndIsNewStudy"},{target:"promptTrackNewSeries",cond:"wasTrackingAndIsNewSeries"},{target:"tracking",cond:"wasTracking"},{target:"off"}]}}},strict:!0},S={services:{promptBeginTracking:(e,t)=>{},promptTrackNewStudy:(e,t)=>{},promptTrackNewSeries:(e,t)=>{}},actions:{discardPreviouslyTrackedMeasurements:(e,t)=>{console.log("discardPreviouslyTrackedMeasurements: not implemented")},clearAllMeasurements:(e,t)=>{console.log("clearAllMeasurements: not implemented")},jumpToFirstMeasurementInActiveViewport:(e,t)=>{console.warn("jumpToFirstMeasurementInActiveViewport: not implemented")},showStructuredReportDisplaySetInActiveViewport:(e,t)=>{console.warn("showStructuredReportDisplaySetInActiveViewport: not implemented")},clearContext:(0,i.kp)({trackedStudy:"",trackedSeries:[],ignoredSeries:[],prevTrackedStudy:"",prevTrackedSeries:[],prevIgnoredSeries:[]}),setTrackedStudyAndSeries:(0,i.kp)(((e,t)=>({prevTrackedStudy:e.trackedStudy,prevTrackedSeries:e.trackedSeries.slice(),prevIgnoredSeries:e.ignoredSeries.slice(),trackedStudy:t.data.StudyInstanceUID,trackedSeries:[t.data.SeriesInstanceUID],ignoredSeries:[]}))),setTrackedStudyAndMultipleSeries:(0,i.kp)(((e,t)=>{const n=t.StudyInstanceUID||t.data.StudyInstanceUID,r=t.SeriesInstanceUIDs||t.data.SeriesInstanceUIDs;return{prevTrackedStudy:e.trackedStudy,prevTrackedSeries:e.trackedSeries.slice(),prevIgnoredSeries:e.ignoredSeries.slice(),trackedStudy:n,trackedSeries:[...e.trackedSeries,...r],ignoredSeries:[]}})),setIsDirtyToClean:(0,i.kp)(((e,t)=>({isDirty:!1}))),setIsDirty:(0,i.kp)(((e,t)=>({isDirty:!0}))),ignoreSeries:(0,i.kp)(((e,t)=>({prevIgnoredSeries:[...e.ignoredSeries],ignoredSeries:[...e.ignoredSeries,t.data.SeriesInstanceUID]}))),ignoreHydrationForSRSeries:(0,i.kp)(((e,t)=>({ignoredSRSeriesForHydration:[...e.ignoredSRSeriesForHydration,t.data.srSeriesInstanceUID]}))),addTrackedSeries:(0,i.kp)(((e,t)=>({prevTrackedSeries:[...e.trackedSeries],trackedSeries:[...e.trackedSeries,t.data.SeriesInstanceUID]}))),removeTrackedSeries:(0,i.kp)(((e,t)=>({prevTrackedSeries:e.trackedSeries.slice().filter((e=>e!==t.SeriesInstanceUID)),trackedSeries:e.trackedSeries.slice().filter((e=>e!==t.SeriesInstanceUID))}))),setPreviousState:(0,i.kp)(((e,t,n)=>({prevState:n.state.value})))},guards:{shouldSetDirty:(e,t)=>void 0===t.SeriesInstanceUID||e.trackedSeries.includes(t.SeriesInstanceUID),wasLabellingOnly:(e,t,n)=>"labellingOnly"===e.prevState,wasIdle:(e,t,n)=>"idle"===e.prevState,wasTracking:(e,t,n)=>"tracking"===e.prevState,wasTrackingAndIsNewStudy:(e,t,n)=>"tracking"===e.prevState&&!e.ignoredSeries.includes(t.data.SeriesInstanceUID)&&e.trackedStudy!==t.data.StudyInstanceUID,wasTrackingAndIsNewSeries:(e,t,n)=>"tracking"===e.prevState&&!e.ignoredSeries.includes(t.data.SeriesInstanceUID)&&!e.trackedSeries.includes(t.data.SeriesInstanceUID),shouldKillMachine:(e,t)=>t.data&&t.data.userResponse===u.NO_NEVER,shouldAddSeries:(e,t)=>t.data&&t.data.userResponse===u.ADD_SERIES,shouldSetStudyAndSeries:(e,t)=>t.data&&t.data.userResponse===u.SET_STUDY_AND_SERIES,shouldAddIgnoredSeries:(e,t)=>t.data&&t.data.userResponse===u.NO_NOT_FOR_SERIES,shouldPromptSaveReport:(e,t)=>t.data&&t.data.userResponse===u.CREATE_REPORT,shouldIgnoreHydrationForSR:(e,t)=>t.data&&t.data.userResponse===u.CANCEL,shouldSaveAndContinueWithSameReport:(e,t)=>t.data&&t.data.userResponse===u.CREATE_REPORT&&!0===t.data.isBackupSave,shouldSaveAndStartNewReport:(e,t)=>t.data&&t.data.userResponse===u.CREATE_REPORT&&!1===t.data.isBackupSave,shouldHydrateStructuredReport:(e,t)=>t.data&&t.data.userResponse===u.HYDRATE_REPORT,hasRemainingTrackedSeries:(e,t)=>e.trackedSeries.length>1||!e.trackedSeries.includes(t.SeriesInstanceUID),hasNotIgnoredSRSeriesForHydration:(e,t)=>!e.ignoredSRSeriesForHydration.includes(t.SeriesInstanceUID),isNewStudy:(e,t)=>!e.ignoredSeries.includes(t.SeriesInstanceUID)&&e.trackedStudy!==t.StudyInstanceUID,isNewSeries:(e,t)=>!e.ignoredSeries.includes(t.SeriesInstanceUID)&&!e.trackedSeries.includes(t.SeriesInstanceUID)}};var p=n(19683),m=n(40680);const I={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3};const g=function({servicesManager:e,extensionManager:t},n,r){const{uiViewportDialogService:a}=e.services,s=t._appConfig,{viewportId:i,StudyInstanceUID:o,SeriesInstanceUID:c}=r.data||r;return new Promise((async function(e,t){let n=s?.disableConfirmationPrompts?I.SET_STUDY_AND_SERIES:await function(e,t){return new Promise((function(n,r){const a=m.A.t("MeasurementTable:Track measurements for this series?"),s=[{id:"prompt-begin-tracking-cancel",type:p.Ny.NW.secondary,text:m.A.t("Common:No"),value:I.CANCEL},{id:"prompt-begin-tracking-no-do-not-ask-again",type:p.Ny.NW.secondary,text:m.A.t("MeasurementTable:No, do not ask again"),value:I.NO_NEVER},{id:"prompt-begin-tracking-yes",type:p.Ny.NW.primary,text:m.A.t("Common:Yes"),value:I.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,id:"measurement-tracking-prompt-begin-tracking",type:"info",message:a,actions:s,onSubmit:i,onOutsideClick:()=>{e.hide(),n(I.CANCEL)},onKeyPress:e=>{if("Enter"===e.key){const e=s.find((e=>"prompt-begin-tracking-yes"===e.id));i(e.value)}}})}))}(a,i);e({userResponse:n,StudyInstanceUID:o,SeriesInstanceUID:c,viewportId:i})}))},y={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const E=function({servicesManager:e,extensionManager:t},n,r){const{UIViewportDialogService:a}=e.services,{viewportId:s,StudyInstanceUID:i,SeriesInstanceUID:o}=r.data||r;return new Promise((async function(e,t){let r=await function(e,t){return new Promise((function(n,r){const a="Do you want to add this measurement to the existing report?",s=[{type:p.Ny.NW.secondary,text:"Cancel",value:y.CANCEL},{type:p.Ny.NW.primary,text:"Create new report",value:y.CREATE_REPORT},{type:p.Ny.NW.primary,text:"Add to existing report",value:y.ADD_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"info",message:a,actions:s,onSubmit:i,onOutsideClick:()=>{e.hide(),n(y.CANCEL)}})}))}(a,s);r===y.CREATE_REPORT&&(r=n.isDirty?await function(e,t){return new Promise((function(n,r){const a="You have existing tracked measurements. What would you like to do with your existing tracked measurements?",s=[{type:"cancel",text:"Cancel",value:y.CANCEL},{type:"secondary",text:"Save",value:y.CREATE_REPORT},{type:"primary",text:"Discard",value:y.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"warning",message:a,actions:s,onSubmit:i,onOutsideClick:()=>{e.hide(),n(y.CANCEL)}})}))}(a,s):y.SET_STUDY_AND_SERIES),e({userResponse:r,StudyInstanceUID:i,SeriesInstanceUID:o,viewportId:s,isBackupSave:!1})}))},D={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4};const v=function({servicesManager:e,extensionManager:t},n,r){const{uiViewportDialogService:a}=e.services,{viewportId:s,StudyInstanceUID:i,SeriesInstanceUID:o}=r.data||r;return new Promise((async function(e,t){let r=await function(e,t){return new Promise((function(n,r){const a=m.A.t("MeasurementTable:Track measurements for this series?"),s=[{type:"cancel",text:m.A.t("MeasurementTable:No"),value:D.CANCEL},{type:"secondary",text:m.A.t("MeasurementTable:No, do not ask again"),value:D.NO_NOT_FOR_SERIES},{type:"primary",text:m.A.t("MeasurementTable:Yes"),value:D.SET_STUDY_AND_SERIES}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"info",message:a,actions:s,onSubmit:i,onOutsideClick:()=>{e.hide(),n(D.CANCEL)},onKeyPress:e=>{if("Enter"===e.key){const e=s.find((e=>e.value===D.SET_STUDY_AND_SERIES));i(e.value)}}})}))}(a,s);r===D.SET_STUDY_AND_SERIES&&(r=n.isDirty?await function(e,t){return new Promise((function(n,r){const a="Measurements cannot span across multiple studies. Do you want to save your tracked measurements?",s=[{type:"cancel",text:"Cancel",value:D.CANCEL},{type:"secondary",text:"No, discard previously tracked series & measurements",value:D.SET_STUDY_AND_SERIES},{type:"primary",text:"Yes",value:D.CREATE_REPORT}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"warning",message:a,actions:s,onSubmit:i,onOutsideClick:()=>{e.hide(),n(D.CANCEL)}})}))}(a,s):D.SET_STUDY_AND_SERIES),e({userResponse:r,StudyInstanceUID:i,SeriesInstanceUID:o,viewportId:s,isBackupSave:!1})}))};var T=n(34113);const R={NO_NEVER:-1,CANCEL:0,CREATE_REPORT:1,ADD_SERIES:2,SET_STUDY_AND_SERIES:3,NO_NOT_FOR_SERIES:4,HYDRATE_REPORT:5};const k=function({servicesManager:e,extensionManager:t,commandsManager:n,appConfig:r},a,s){const{uiViewportDialogService:i,displaySetService:o}=e.services,{viewportId:c,displaySetInstanceUID:d}=s,u=o.getDisplaySetByUID(d);return new Promise((async function(a,o){const l=r?.disableConfirmationPrompts?R.HYDRATE_REPORT:await function(e,t){return new Promise((function(n,r){const a="Do you want to continue tracking measurements for this study?",s=[{id:"no-hydrate",type:p.Ny.NW.secondary,text:"No",value:R.CANCEL},{id:"yes-hydrate",type:p.Ny.NW.primary,text:"Yes",value:R.HYDRATE_REPORT}],i=t=>{e.hide(),n(t)};e.show({viewportId:t,type:"info",message:a,actions:s,onSubmit:i,onOutsideClick:()=>{e.hide(),n(R.CANCEL)},onKeyPress:e=>{if("Enter"===e.key){const e=s.find((e=>e.value===R.HYDRATE_REPORT));i(e.value)}}})}))}(i,c);let S,m;if(l===R.HYDRATE_REPORT){console.warn("!! HYDRATING STRUCTURED REPORT");const a=(0,T.hydrateStructuredReport)({servicesManager:e,extensionManager:t,commandsManager:n,appConfig:r},d);S=a.StudyInstanceUID,m=a.SeriesInstanceUIDs}a({userResponse:l,displaySetInstanceUID:s.displaySetInstanceUID,srSeriesInstanceUID:u.SeriesInstanceUID,viewportId:c,StudyInstanceUID:S,SeriesInstanceUIDs:m})}))};const f=function({servicesManager:e,extensionManager:t,commandsManager:n,appConfig:r},a,s){const{displaySetService:i}=e.services,{viewportId:o,displaySetInstanceUID:c}=s,d=i.getDisplaySetByUID(c);return new Promise(((a,i)=>{const u=(0,T.hydrateStructuredReport)({servicesManager:e,extensionManager:t,commandsManager:n,appConfig:r},c),l=u.StudyInstanceUID,S=u.SeriesInstanceUIDs;a({displaySetInstanceUID:s.displaySetInstanceUID,srSeriesInstanceUID:d.SeriesInstanceUID,viewportId:o,StudyInstanceUID:l,SeriesInstanceUIDs:S})}))};var w=n(45981);const A=r.createContext();A.displayName="TrackedMeasurementsContext";const h=()=>(0,r.useContext)(A),M="@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr";function U({servicesManager:e,commandsManager:t,extensionManager:n},{children:a}){const[s]=(0,w.r)(),[p,m]=(0,c.ih)(),{activeViewportId:I,viewports:y}=p,{measurementService:D,displaySetService:T,customizationService:R}=e.services,h=Object.assign({},S);h.actions=Object.assign({},h.actions,{jumpToFirstMeasurementInActiveViewport:(e,t)=>{const{trackedStudy:n,trackedSeries:r,activeViewportId:a}=e,s=D.getMeasurements().filter((e=>n===e.referenceStudyUID&&r.includes(e.referenceSeriesUID)));console.log("jumping to measurement reset viewport",a,s[0]);const i=s[0].displaySetInstanceUID,o=T.getDisplaySetByUID(i).images,c=o[0].imageId.startsWith("volumeId"),d=s[0].data;let u=0;!c&&d&&(u=o.findIndex((e=>{const t=Object.keys(d)[0].substring(8);return e.imageId===t})),-1===u&&(console.warn("Could not find image index for tracked measurement, using 0"),u=0)),m.setDisplaySetsForViewport({viewportId:a,displaySetInstanceUIDs:[i],viewportOptions:{initialImageOptions:{index:u}}})},jumpToSameImageInActiveViewport:(e,n)=>{const{trackedStudy:r,trackedSeries:a,activeViewportId:s}=e,i=D.getMeasurements(),o=i.filter((e=>r===e.referenceStudyUID&&a.includes(e.referenceSeriesUID)));if(!o?.length)return void console.warn("Didn't find any tracked measurements",i,r,a);const c=o[o.length-1],d=c.displaySetInstanceUID;t.runCommand("updateStoredPositionPresentation",{viewportId:s,displaySetInstanceUID:d,referencedImageId:c.referencedImageId}),m.setDisplaySetsForViewport({viewportId:s,displaySetInstanceUIDs:[d]})},showStructuredReportDisplaySetInActiveViewport:(e,t)=>{if(t.data.createdDisplaySetInstanceUIDs.length>0){const e=t.data.createdDisplaySetInstanceUIDs[0];m.setDisplaySetsForViewport({viewportId:t.data.viewportId,displaySetInstanceUIDs:[e]})}},discardPreviouslyTrackedMeasurements:(e,t)=>{const n=D.getMeasurements().filter((t=>e.prevTrackedSeries.includes(t.referenceSeriesUID))).map((e=>e.id));for(let e=0;e<n.length;e++)D.remove(n[e])},clearAllMeasurements:(e,t)=>{const n=D.getMeasurements().map((e=>e.uid));for(let e=0;e<n.length;e++)D.remove(n[e])}}),h.services=Object.assign({},h.services,{promptBeginTracking:g.bind(null,{servicesManager:e,extensionManager:n,appConfig:s}),promptTrackNewSeries:E.bind(null,{servicesManager:e,extensionManager:n,appConfig:s}),promptTrackNewStudy:v.bind(null,{servicesManager:e,extensionManager:n,appConfig:s}),promptSaveReport:d.promptSaveReport.bind(null,{servicesManager:e,commandsManager:t,extensionManager:n,appConfig:s}),promptHydrateStructuredReport:k.bind(null,{servicesManager:e,extensionManager:n,commandsManager:t,appConfig:s}),hydrateStructuredReport:f.bind(null,{servicesManager:e,extensionManager:n,commandsManager:t,appConfig:s}),promptLabelAnnotation:d.promptLabelAnnotation.bind(null,{servicesManager:e,extensionManager:n,commandsManager:t})}),h.guards=Object.assign({},h.guards,{isLabelOnMeasure:(e,t,n)=>{const r=R.getCustomization("measurementLabels");return r?.labelOnMeasure},isLabelOnMeasureAndShouldKillMachine:(e,t,n)=>{const r=R.getCustomization("measurementLabels");return t.data&&t.data.userResponse===u.NO_NEVER&&r?.labelOnMeasure}});const U=(0,r.useMemo)((()=>(0,i.u5)(l,h)),[]),[N,C]=(0,o.zl)(U);return(0,r.useEffect)((()=>{C("UPDATE_ACTIVE_VIEWPORT_ID",{activeViewportId:I})}),[I,C]),(0,r.useEffect)((()=>{(async()=>{if(y.size>0){const t=y.get(I);if(!t||!t?.displaySetInstanceUIDs?.length)return;const{displaySetService:n}=e.services,r=n.getDisplaySetByUID(t.displaySetInstanceUIDs[0]);if(!r)return;if(r.SOPClassHandlerId===M&&!r.isLoaded&&r.load&&await r.load(),r.SOPClassHandlerId===M&&!0===r.isRehydratable){const e={displaySetInstanceUID:r.displaySetInstanceUID,SeriesInstanceUID:r.SeriesInstanceUID,viewportId:I},t=s?.disableConfirmationPrompts;C(t?"HYDRATE_SR":"PROMPT_HYDRATE_SR",e)}}})()}),[N,I,C,e.services,y,s]),(0,r.useEffect)((()=>{t.registerCommand("DEFAULT","loadTrackedSRMeasurements",{commandFn:e=>C("HYDRATE_SR",e)})}),[t,C]),r.createElement(A.Provider,{value:[N,C]},a)}U.propTypes={children:s().oneOf([s().func,s().node]),appConfig:s().object};const N=function({servicesManager:e,extensionManager:t,commandsManager:n}){const r=U.bind(null,{servicesManager:e,extensionManager:t,commandsManager:n});return[{name:"TrackedMeasurementsContext",context:A,provider:r}]}},33219:(e,t,n)=>{n.r(t),n.d(t,{default:()=>V});var r=n(86326),a=n(79044),s=n(4194),i=n(99993),o=n(97598),c=n.n(o),d=n(54231),u=n(19683),l=n(11078),S=n(99847);const p=[{id:"settings",iconName:"Settings",value:!1}];function m({hide:e,onConfirm:t}){return r.createElement("div",{className:"text-foreground"},r.createElement("div",null,r.createElement("p",null,"Are you sure you want to untrack this series?"),r.createElement("p",{className:"mt-2"},"This action cannot be undone and will delete all your existing measurements.")),r.createElement(l.es,{className:"mt-4"},r.createElement(l.es.Right,null,r.createElement(l.es.Secondary,{onClick:e},"Cancel"),r.createElement(l.es.Primary,{onClick:()=>{t(),e()}},"Untrack"))))}const{formatDate:I,createStudyBrowserTabs:g}=d.Wp,y=["SR","SEG","SM","RTSTRUCT","RTPLAN","RTDOSE","DOC","OT","PMAP"];function E({getImageSrc:e,getStudiesForPatientByMRN:t,requestDisplaySetCreationForStudy:n,dataSource:o}){const{servicesManager:c,commandsManager:E}=(0,d.Jg)(),{displaySetService:T,uiDialogService:R,hangingProtocolService:k,uiNotificationService:f,measurementService:w,studyPrefetcherService:A,customizationService:h,uiModalService:M}=c.services,U=(0,s.Zp)(),N=h.getCustomization("studyBrowser.studyMode"),{t:C}=(0,i.Bd)("Common"),{StudyInstanceUIDs:_}=(0,u.Bz)(),[{activeViewportId:b,viewports:P,isHangingProtocolLayout:O},x]=(0,l.ih)(),[V,L]=(0,a.B)(),[F,H]=(0,r.useState)(N),[Y,B]=(0,r.useState)([..._]),[j,K]=(0,r.useState)([]),[W,q]=(0,r.useState)(!1),[z,G]=(0,r.useState)([]),[J,$]=(0,r.useState)({}),[Z,Q]=(0,r.useState)({}),[X,ee]=(0,r.useState)(null),[te,ne]=(0,r.useState)(h.getCustomization("studyBrowser.viewPresets")),[re,ae]=(0,r.useState)(p),se=P.get(b)?.displaySetInstanceUIDs,{trackedSeries:ie}=V.context;(0,r.useEffect)((()=>{H(N)}),[N]),(0,r.useEffect)((()=>{_.forEach((e=>async function(e){const n=await o.query.studies.search({studyInstanceUid:e});if(!n?.length)throw U("/notfoundstudy","_self"),new Error("Invalid study URL");let r=n;try{r=await t(n)}catch(e){console.warn(e)}const a=r.map((e=>({AccessionNumber:e.accession,StudyDate:e.date,StudyDescription:e.description,NumInstances:e.instances,ModalitiesInStudy:e.modalities,PatientID:e.mrn,PatientName:e.patientName,StudyInstanceUID:e.studyInstanceUid,StudyTime:e.time}))).map((e=>({studyInstanceUid:e.StudyInstanceUID,date:I(e.StudyDate)||C("NoStudyDate"),description:e.StudyDescription,modalities:e.ModalitiesInStudy,numInstances:e.NumInstances})));K((e=>{const t=[...e];for(const n of a)e.find((e=>e.studyInstanceUid===n.studyInstanceUid))||t.push(n);return t}))}(e)))}),[_,t]),(0,r.useEffect)((()=>{if(!W){if(b){const e=250+10*T.getActiveDisplaySets().length;window.setTimeout((()=>q(!0)),e)}return}let t=T.activeDisplaySets;t=t.filter((e=>!y.includes(e.Modality))),t.length&&t.forEach((async t=>{const n={},r=T.getDisplaySetByUID(t.displaySetInstanceUID),a=D(r,o.getImageIdsForDisplaySet(r));if(!a||r?.unsupported)return;let{thumbnailSrc:s}=r;if(!s&&r.getThumbnailSrc&&(s=await r.getThumbnailSrc()),!s){const t=await e(a);r.thumbnailSrc=t}n[t.displaySetInstanceUID]=s,Q((e=>({...e,...n})))}))}),[T,o,e,b,W]),(0,r.useEffect)((()=>{const e=T.activeDisplaySets;if(!e.length)return;const t=v(e,J,Z,ie,P,x,o,T,R,f);G(t)}),[T.activeDisplaySets,J,ie,P,o,Z]),(0,r.useEffect)((()=>{const{unsubscribe:e}=A.subscribe(A.EVENTS.DISPLAYSET_LOAD_PROGRESS,(e=>{const{displaySetInstanceUID:t,loadingProgress:n}=e;$((e=>({...e,[t]:n})))}));return()=>e()}),[A]),(0,r.useEffect)((()=>{const t=T.subscribe(T.EVENTS.DISPLAY_SETS_ADDED,(t=>{if(!W)return;const{displaySetsAdded:n,options:r}=t;n.forEach((async t=>{const n=t.displaySetInstanceUID,a={},s=T.getDisplaySetByUID(n);if(s?.unsupported)return;r.madeInClient&&ee(n);const i=D(s,o.getImageIdsForDisplaySet(s));i&&(a[n]=await e(i),Q((e=>({...e,...a}))))}))}));return()=>{t.unsubscribe()}}),[T,o,e,Z,ie,P]),(0,r.useEffect)((()=>{const e=T.subscribe(T.EVENTS.DISPLAY_SETS_CHANGED,(e=>{const t=v(e,J,Z,ie,P,x,o,T,R,f);G(t)})),t=T.subscribe(T.EVENTS.DISPLAY_SET_SERIES_METADATA_INVALIDATED,(()=>{const e=v(T.getActiveDisplaySets(),J,Z,ie,P,x,o,T,R,f);G(e)}));return()=>{e.unsubscribe(),t.unsubscribe()}}),[J,Z,ie,P,o,T]);const oe=g(_,j,z);(0,r.useEffect)((()=>{if(X){const e=X,t=document.getElementById(`thumbnail-${e}`);t&&"function"==typeof t.scrollIntoView&&(t.scrollIntoView({behavior:"smooth"}),ee(null))}}),[X,Y,F]),(0,r.useEffect)((()=>{if(!X)return;const e=function(e,t){for(let n=0;n<t.length;n++){const{studies:r}=t[n];for(let a=0;a<r.length;a++){const{displaySets:s}=r[a];for(let i=0;i<s.length;i++){if(s[i].displaySetInstanceUID===e)return{tabName:t[n].name,StudyInstanceUID:r[a].studyInstanceUid}}}}}(X,oe);if(!e)return void console.warn("jumpToThumbnail: displaySet thumbnail not found.");const{tabName:t,StudyInstanceUID:n}=e;H(t);if(!Y.includes(n)){const e=[...Y,n];B(e)}}),[Y,X,oe]);return r.createElement(r.Fragment,null,r.createElement(r.Fragment,null,r.createElement(S.PanelStudyBrowserHeader,{viewPresets:te,updateViewPresetValue:e=>{if(!e)return;const t=te.map((t=>(t.selected=t.id===e.id,t)));ne(t)},actionIcons:re,updateActionIconValue:e=>{e.value=!e.value;const t=[...re];ae(t)}}),r.createElement(l.wv,{orientation:"horizontal",className:"bg-black",thickness:"2px"})),r.createElement(l.M4,{tabs:oe,servicesManager:c,activeTabName:F,expandedStudyInstanceUIDs:Y,onClickStudy:function(e){const t=Y.includes(e),r=t?[...Y.filter((t=>t!==e))]:[...Y,e];if(B(r),!t){n(T,e,!0)}},onClickTab:e=>{H(e)},onClickUntrack:e=>{(e=>{M.show({title:"Untrack Series",content:m,contentProps:{onConfirm:()=>{const t=T.getDisplaySetByUID(e);L("UNTRACK_SERIES",{SeriesInstanceUID:t.SeriesInstanceUID}),w.getMeasurements().forEach((e=>{e.referenceSeriesUID===t.SeriesInstanceUID&&w.remove(e.uid)}))}}})})(e)},onClickThumbnail:()=>{},onDoubleClickThumbnail:e=>{let t=[];const n=b;try{t=k.getViewportsRequireUpdate(n,e,O)}catch(e){console.warn(e),f.show({title:"Thumbnail Double Click",message:"The selected display sets could not be added to the viewport due to a mismatch in the Hanging Protocol rules.",type:"error",duration:3e3})}x.setDisplaySetsForViewports(t)},activeDisplaySetInstanceUIDs:se,showSettings:re.find((e=>"settings"===e.id)).value,viewPresets:te,ThumbnailMenuItems:(0,S.MoreDropdownMenu)({commandsManager:E,servicesManager:c,menuItemsKey:"studyBrowser.thumbnailMenuItems"}),StudyMenuItems:(0,S.MoreDropdownMenu)({commandsManager:E,servicesManager:c,menuItemsKey:"studyBrowser.studyMenuItems"})}))}function D(e,t){let n;if(e.isDynamicVolume){const t=e.dynamicVolumeInfo.timePoints,r=t[Math.floor(t.length/2)];n=r[Math.floor(r.length/2)]}else n=t[Math.floor(t.length/2)];return n}function v(e,t,n,r,a,s,i,o,c,d){const u=[],l=[];return e.filter((e=>!e.excludeFromThumbnailBrowser)).forEach((e=>{const{thumbnailSrc:a,displaySetInstanceUID:s}=e,i=function(e){if(y.includes(e.Modality)||e?.unsupported)return"thumbnailNoImage";return"thumbnailTracked"}(e),o="thumbnailTracked"===i?u:l,c=t?.[s],d={displaySetInstanceUID:s,description:e.SeriesDescription,seriesNumber:e.SeriesNumber,modality:e.Modality,seriesDate:I(e.SeriesDate),numInstances:e.numImageFrames,loadingProgress:c,countIcon:e.countIcon,messages:e.messages,StudyInstanceUID:e.StudyInstanceUID,componentType:i,imageSrc:a||n[s],dragData:{type:"displayset",displaySetInstanceUID:s},isTracked:r.includes(e.SeriesInstanceUID),isHydratedForDerivedDisplaySet:e.isHydrated};o.push(d)})),[...u,...l]}E.propTypes={dataSource:c().shape({getImageIdsForDisplaySet:c().func.isRequired}).isRequired,getImageSrc:c().func.isRequired,getStudiesForPatientByMRN:c().func.isRequired,requestDisplaySetCreationForStudy:c().func.isRequired};const T=function(e,t){return new Promise(((n,r)=>{const a=document.createElement("canvas");e.utilities.loadImageToCanvas({canvas:a,imageId:t,thumbnail:!0}).then((e=>{n(a.toDataURL())})).catch(r)}))};const R=function(){const{extensionManager:e}=(0,d.Jg)(),t=e.getActiveDataSource()[0],n=function(e){const t=e.getModuleEntry("@ohif/extension-default.utilityModule.common"),{getStudiesForPatientByMRN:n}=t.exports;return n}(e).bind(null,t),a=(0,r.useCallback)(function(e){const t=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common");try{const{cornerstone:e}=t.exports.getCornerstoneLibraries();return T.bind(null,e)}catch(e){throw new Error("Required command not found")}}(e),[]),s=S.requestDisplaySetCreationForStudy.bind(null,t);return r.createElement(E,{dataSource:t,getImageSrc:a,getStudiesForPatientByMRN:n,requestDisplaySetCreationForStudy:s})};var k=n(20895);const{filterAnd:f,filterPlanarMeasurement:w,filterMeasurementsBySeriesUID:A}=d.Wp.MeasurementFilters;const h=function(e){const[t]=(0,l.ih)(),[n,s]=(0,a.B)(),{trackedStudy:i,trackedSeries:o}=n.context,c=i?f(w,A(o)):w,d={createSR:({StudyInstanceUID:e})=>{s("SAVE_REPORT",{viewportId:t.activeViewportId,isBackupSave:!0,StudyInstanceUID:e,measurementFilter:c})}},u=e=>r.createElement(l.$m,{asChild:!0,className:"px-0"},r.createElement("div",{"data-cy":"TrackingHeader"},r.createElement(k.StudySummaryFromMetadata,e)));return r.createElement("div",{"data-cy":"trackedMeasurements-panel"},r.createElement(k.PanelMeasurement,{measurementFilter:c,emptyComponent:()=>r.createElement("div",{"data-cy":"trackedMeasurements-panel"},r.createElement(l.V,{title:"Measurements",isExpanded:!1},r.createElement(l.V.Body,null))),sourceChildren:e.children},r.createElement(k.StudyMeasurements,{grouping:e.grouping},r.createElement(k.AccordionGroup.Trigger,{key:"trackingMeasurementsHeader",asChild:!0},r.createElement(u,{key:"trackingHeadChild"})),r.createElement(k.MeasurementsOrAdditionalFindings,{key:"measurementsOrAdditionalFindings",activeStudyUID:i,customHeader:k.StudyMeasurementsActions,measurementFilter:c,actions:d}))))};var M=n(40680);function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},U.apply(null,arguments)}const N=function({commandsManager:e,extensionManager:t,servicesManager:n}){return[{name:"seriesList",iconName:"tab-studies",iconLabel:"Studies",label:M.A.t("SidePanel:Studies"),component:e=>r.createElement(R,e)},{name:"trackedMeasurements",iconName:"tab-linear",iconLabel:"Measure",label:M.A.t("SidePanel:Measurements"),component:a=>r.createElement(h,U({},a,{key:"trackedMeasurements-panel",commandsManager:e,extensionManager:t,servicesManager:n}))}]};function C(){return C=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},C.apply(null,arguments)}const _=r.lazy((()=>n.e(9862).then(n.bind(n,49862)))),b=e=>r.createElement(r.Suspense,{fallback:r.createElement("div",null,"Loading...")},r.createElement(_,e));const P=function({servicesManager:e,commandsManager:t,extensionManager:n}){return[{name:"cornerstone-tracked",component:a=>r.createElement(b,C({servicesManager:e,commandsManager:t,extensionManager:n},a)),isReferenceViewable:t=>k.utils.isReferenceViewable({...t,servicesManager:e})}]},O=JSON.parse('{"UU":"@ohif/extension-measurement-tracking"}').UU;var x=n(16076);const V={id:O,getContextModule:a.A,getPanelModule:N,getViewportModule:P,onModeEnter({servicesManager:e}){const{toolbarService:t}=e.services;t.addButtons([{id:"loadSRMeasurements",component:e=>r.createElement(u.N8,e,x.A.t("Common:LOAD")),props:{commands:["loadTrackedSRMeasurements"]}}],!0)}}}}]);
//# sourceMappingURL=2308.bundle.c03a243870ccb2366ef7.js.map